{"ast":null,"code":"/*! @azure/msal-common v6.1.0 2022-02-08 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */\n\nvar TokenCacheContext =\n/** @class */\nfunction () {\n  function TokenCacheContext(tokenCache, hasChanged) {\n    this.cache = tokenCache;\n    this.hasChanged = hasChanged;\n  }\n\n  Object.defineProperty(TokenCacheContext.prototype, \"cacheHasChanged\", {\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\n    get: function () {\n      return this.hasChanged;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TokenCacheContext.prototype, \"tokenCache\", {\n    /**\r\n     * function to retrieve the token cache\r\n     */\n    get: function () {\n      return this.cache;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return TokenCacheContext;\n}();\n\nexport { TokenCacheContext };","map":{"version":3,"mappings":";;AAAA;;;;;AAOA;;;;;;;;AAaI,6BAAYA,UAAZ,EAAiDC,UAAjD,EAAoE;AAChE,SAAKC,KAAL,GAAaF,UAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;;AAKDE,wBAAIC,2BAAJ,EAAI,iBAAJ,EAAmB;;;;SAAnB;AACI,aAAO,KAAKH,UAAZ;AACH,KAFkB;qBAAA;;AAAA,GAAnB;AAOAE,wBAAIC,2BAAJ,EAAI,YAAJ,EAAc;;;;SAAd;AACI,aAAO,KAAKF,KAAZ;AACH,KAFa;qBAAA;;AAAA,GAAd;AAGJ;AAAC","names":["tokenCache","hasChanged","cache","Object","TokenCacheContext"],"sources":["C:\\Users\\empti\\OneDrive\\Desktop\\User_Interface\\user_interface_frontend\\node_modules\\@azure\\msal-common\\src\\cache\\persistence\\TokenCacheContext.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}